version: "3.7"

services:
  client:
    build:
      context: ./react_frontend
      dockerfile: Dockerfile

    tty: true
    ports:
      - "80:80"

    volumes:
      - ./react_frontend:/webapp
      - /webapp/node_modules

    networks:
      - frontend

  mongodb:
    image: mongo
    restart: always
    command: mongod --auth
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "password"
      MONGO_INITDB_DATABASE: "application"
      MONGODB_DATA_DIR: /data/mongodb
    volumes:
      - ./mongo-entrypoint/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      - mongodb_volume:/data/mongodb
    networks:
      - backend

  flask_api:
    build:
      context: ./flask_backend
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:5000 app:app
    ports:
      - "5000:5000"

    environment:
      MONGODB_HOST: mongodb
      MONGODB_USERNAME: "flask_api"
      MONGODB_PASSWORD: "anotherpassword"

    volumes:
      - webapp_volume:/var/www/

    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodb_volume:
    driver: local

  webapp_volume:
    driver: local
